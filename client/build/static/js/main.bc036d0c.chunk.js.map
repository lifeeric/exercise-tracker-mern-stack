{"version":3,"sources":["components/Loader/Loader.js","components/ExercisesList/ExerciseList.js","components/CreateExerciseList/CreateExerciseList.js","components/CreateUser/CreateUser.js","components/Header/header.js","App.js","serviceWorker.js","index.js","components/Loader/Loader.module.scss"],"names":["className","classes","modal","ring","ExerciseList","state","exercises","loading","deleteExcercise","id","axios","delete","setState","prevState","filter","ex","_id","updateHandler","props","history","push","pathname","search","get","then","res","data","console","log","catch","err","singleExercise","this","Loader","length","map","exercise","key","username","description","duration","date","substring","onClick","Component","Date","users","usernameHandler","e","target","value","descriptionHandler","durationHandler","changeDate","onFormSubmit","preventDefault","uri","location","put","post","String","user","option","usr","onSubmit","htmlFor","required","onChange","type","placeholder","selected","style","width","useState","getUser","setUser","to","data-toggle","href","App","path","exact","component","ExercisesList","CreateExerciseList","CreateUser","Boolean","window","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message","module","exports"],"mappings":"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","file":"static/js/main.bc036d0c.chunk.js","sourcesContent":["import React from 'react';\nimport classes from './Loader.module.scss';\n\n\nexport default () => {\n    return (\n        <div className={classes.modal}>\n            <div className={classes.ring}></div>\n        </div>\n    );\n}","import React, { Component } from 'react';\nimport Loader from '../Loader/Loader';\nimport axios from 'axios';\n\nexport default class ExerciseList extends Component {\n\n    state = {\n        exercises: [],\n        loading: true\n    }\n\n    componentDidMount () {\n        axios.get('http://localhost:5000/api/exercises')\n            .then(res => { this.setState({ exercises: res.data, loading: false}) \n            console.log(res.data)\n        })\n            .catch( err => this.setState({loading: true}));\n    };\n\n    // Delete Exercise\n    deleteExcercise = (id) => {\n        axios.delete('http://localhost:5000/api/exercises/'+ id);\n\n        this.setState(prevState => ({\n            exercises: prevState.exercises.filter(ex => ex._id !== id)\n        }));\n    }\n\n    // update\n    updateHandler = id => {\n\n\n        this.props.history.push({\n            pathname: '/create',\n            search: '?' + id\n        })\n    }\n\n    render() {\n\n        // Show Single Exercise detail\n        let singleExercise = (\n            <tr>\n                <td> <p>No Data Yet inserted!</p> </td>\n            </tr>\n        )\n        \n        if ( this.state.loading ) {\n            singleExercise = (\n                <tr>\n                    <td> <Loader /></td>\n                    <td></td>\n                </tr>\n            );\n        }\n\n        if( this.state.exercises.length )\n        {\n            singleExercise = this.state.exercises.map( exercise => (\n                <tr key={exercise._id}>\n                   <td> {exercise.username} </td>\n                   <td> {exercise.description} </td>\n                   <td> {exercise.duration} </td>\n                   <td> {exercise.date.substring(0, 10)} </td>\n                   <td> <button className=\"btn btn-link\" onClick={() => this.updateHandler(exercise._id)} >Edit</button> | <button className=\"btn btn-link\" onClick={() => this.deleteExcercise(exercise._id)}>Delete</button> </td>\n                </tr>\n            ));\n        }\n            \n\n        return (\n            <div className=\"container mt-5\">\n                <h3> Exercise List </h3>\n\n                <table className=\"table table-striped mt-4\">\n                    <thead>\n                    <tr>\n                        <th>Username</th>\n                        <th>Description</th>\n                        <th>Duration</th>\n                        <th>Date</th>\n                        <th>Action</th>\n                    </tr>\n                    </thead>\n                    <tbody>\n                        { singleExercise }\n                    </tbody>\n                </table>\n            </div>\n        );\n    }\n}","import React, { Component } from 'react';\nimport Datepicker from 'react-datepicker';\nimport axios from 'axios';\nimport \"react-datepicker/dist/react-datepicker.css\";\n\nexport default class extends Component {\n    \n    state = {\n        username: null,\n        description: '',\n        duration: 0,\n        date: new Date(),\n        users: [],\n    }\n\n    // componentDidUpdate (){\n        \n\n\n    // }\n\n    // when the component injected\n    componentDidMount () {\n        console.log('updated')\n\n\n        let uri = String(this.props.location.search)\n        uri = uri.substring(1);\n\n        if ( uri.length )\n        {\n                 axios.get('http://localhost:5000/api/exercises/'+uri)\n                .then(res => {\n                    this.setState({\n                            users: [res.data.username],\n                            username:  res.data.username,\n                            description: res.data.description,\n                            duration: res.data.duration,\n                        })\n                })\n            \n        }\n        else {\n            axios.get('http://localhost:5000/api/users/')\n                .then(res => {\n                    \n                    if( res.data.length > 0 )\n                    {\n                        this.setState({\n                            users: res.data.map(user => user.username),\n                            username:  res.data[0].username \n                        })\n                    }\n                })\n        }\n    }\n\n\n    // username handler\n    usernameHandler = (e) => {\n        this.setState({\n            username: e.target.value\n        });\n    }\n\n    // description handler\n    descriptionHandler = (e) => {\n        this.setState({\n            description: e.target.value\n        });\n    }\n\n    // duration handler\n    durationHandler = (e) => {\n        this.setState({\n            duration: e.target.value\n        });\n    }\n\n    // Change Date\n    changeDate = (date) => {\n        this.setState({\n            date: date\n        });\n    }\n\n    // form submit\n    onFormSubmit = (e) => {\n        e.preventDefault();\n\n        // exercise \n        const exercise = {\n            username: this.state.username,\n            description: this.state.description,\n            duration: this.state.duration,\n            date: this.state.date\n        };\n        // send data\n        const uri = 'http://localhost:5000/api/exercises/';\n        const id = this.props.location.search.substring(1);\n        \n        if( id )\n        {\n            axios.put(uri + id, exercise)\n                .then(res => this.props.history.push('/'));\n        }\n        else\n        {\n            axios.post(uri, exercise);\n             this.props.history.push('/');\n        }\n    }\n\n    render() {\n\n        let option = null;\n\n        if ( this.state.users.length > 0 )\n        {\n            option = this.state.users.map( (usr, id) => (\n                        <option key={id+'3'} value={usr}>\n                            {usr}\n                        </option>\n                    ))\n        }\n        return (\n            <div className=\"container mt-5\">\n                <h3> Create New Exercise</h3>\n                <form onSubmit={this.onFormSubmit}>\n                    \n                    <div className=\"form-group\">\n                        <label htmlFor=\"sel1\">Select list:</label>\n                        <select\n                            required\n                            value={this.state.username ? this.state.username : ''}\n                            onChange={this.usernameHandler} \n                            className=\"form-control\" \n                            id=\"sel1\">\n                            { option }\n                        </select>\n                    </div>\n\n                    <div className=\"form-group\">\n                        <label htmlFor=\"description\">Description:</label>\n                        <input value={this.state.description} required onChange={this.descriptionHandler} type=\"text\" className=\"form-control\" placeholder=\"I was hiking\" id=\"description\" />\n                    </div>\n\n                    <div className=\"form-group\">\n                        <label htmlFor=\"duration\">Duration:</label>\n                        <input value={this.state.duration} onChange={this.durationHandler} type=\"text\" className=\"form-control\" placeholder=\"5\" id=\"email\" />\n                    </div>\n\n                    <div className=\"form-group\">\n                        <label>Date:</label>\n                        <Datepicker \n                            selected={this.state.date}\n                            onChange={this.changeDate}\n                            className=\"form-control\"\n                            style={{width: '100%'}}\n                        />\n                    </div>\n\n                    <br />\n                    <input type=\"submit\" className=\"btn btn-primary\" />\n                </form>\n            </div>\n        );\n    }\n}","import React, { useState } from 'react';\nimport axios from 'axios';\n\nexport default (props) => {\n\n    const [ getUser, setUser ] = useState({username:''});\n\n    const userHandler = (e) => {\n        setUser({username: e.target.value});\n    }\n\n    const FormSubmit = e => {\n        e.preventDefault();\n\n        axios.post('http://localhost:5000/api/users', getUser);\n        props.history.push('/'); // redirect\n\n    }\n\n    return (\n        <div className=\"container mt-5\">\n            <h3> Create User</h3>\n            <form onSubmit={FormSubmit} className=\"mt-5\">\n                <div className=\"form-group\">\n                    <label htmlFor=\"username\">Username:</label>\n                    <input required onChange={userHandler} type=\"text\" className=\"form-control\" placeholder=\"Enter username\" id=\"email\" />\n                </div>\n                <br />\n                <button type=\"submit\" className=\"btn btn-primary\">Submit</button>\n            </form>\n        </div>\n    );\n}","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nexport default () => {\n\n    return (\n        <ul className=\"nav nav-tabs\">\n            <Link className=\"navbar-brand\" to=\"/\">home</Link>\n            <li className=\"nav-item\">\n                <Link to=\"/\" className=\"nav-link\" data-toggle=\"tab\" href=\"#home\">Exercise List</Link>\n            </li>\n            <li className=\"nav-item\">\n                <Link to=\"create\" className=\"nav-link\" data-toggle=\"tab\" href=\"#menu1\">Create Exercise</Link>\n            </li>\n            <li className=\"nav-item\">\n                <Link to=\"user\" className=\"nav-link\" data-toggle=\"tab\" href=\"#menu2\">Create User</Link>\n            </li>\n        </ul>\n    );\n}","import React from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport ExercisesList from './components/ExercisesList/ExerciseList';\nimport CreateExerciseList from './components/CreateExerciseList/CreateExerciseList';\nimport CreateUser from './components/CreateUser/CreateUser';\nimport Header from './components/Header/header'\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nfunction App() {\n  return (\n    <Router>\n      <Header />\n      <Route path=\"/\" exact component={ExercisesList} />\n      <Route path=\"/create\" component={CreateExerciseList} />\n      <Route path=\"/user\" component={CreateUser} />\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modal\":\"Loader_modal__1Z--7\",\"ring\":\"Loader_ring__ucO75\",\"lds-dual-ring\":\"Loader_lds-dual-ring__RXHz3\"};"],"sourceRoot":""}